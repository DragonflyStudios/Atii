
WorldDrawer // graphics engine ...
{
    ViewportSize
    Scaling
    WorldWindow

    // updates triggered by user
    //
    // - Viewport size change (device rotation)
    //   => Window size change
    // - Scaling change (pinch zoom)
    //   => Window size and position change
    // - Panning change (scroll, fling, double tap)
    //   => Window position change
    //
    // - All requires new rendering requests
    //   => Render request ... simulated by onDraw call for now ...

    // Tiling should happen here.

    // During Scaling ... 
    // - Use closest scale

    // During Panning ...
    // - Use closest scale
    // - If crosses into new ...
    //   - Update new ... request new
    // - If crosses half-way line
    //   - ... request new for invisible ones (prerequest)
    //     - ... triggered if distance to window edge is less than half of a tile's width or height

    // When ScaleFactor is updated ... 
    // - Figure out tiles ... request new tiles 

    // Cacheing for neighborhood ...

    // 4 tiles cover visible area with a bit of padding
    // Maximum of 9 tiles needed at a time
    // Up to 16 tiles cached (7 currently invisible ones in direction of travel)

    // should have a tile state to track the state and host the tile Drawables ...
}

Viewport
{
    // specified in screen/view coordinates

    // most important is width and height

    // device rotation would be a viewport change
}

WorldWindow
{
    // specified in world coordinates

    // determined from
    // - scaling ..., specified in 
    // - size ..., specified in world coordinates
    // - origin ..., specified in world coordinates
}

World
{
    // knows nothing about tiles ...
    // only knows Drawable is requested for a rect

    // implements an interface that renders content of a window into bitmap ... into Drawables
    // Drawables ... that indicates the rect of the world that is being drawn ...
    // ... potentially override the draw() method to present things differently ...

    //
    
}

ViewTile
{
    // this is a matter of Viewport
}

DocumentLayout
{
    // single page; continuous; scrolls ...
}

DocumentLayouter
{
    // this is a matter of document

    // single page vs. continuous vs. scrolls is a matter of how the "world"
    // is to be constructed from document content

    // Page mode change is a world change ...
}

Document
{
    // serves content ...
}

